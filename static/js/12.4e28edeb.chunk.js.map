{"version":3,"sources":["../node_modules/reactstrap/es/Form.js","views/materials/planModel.js","views/materials/AddMaterialsModel.js","views/materials/Materials.js"],"names":["propTypes","children","PropTypes","node","inline","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","className","cssModule","Form","_Component","props","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","PlanModel","_ref","isOpen","toggle","_jsxs","Modal","_jsx","ModalHeader","ModalBody","FormGroup","Label","for","Input","type","name","id","ModalFooter","Button","color","onClick","AddMaterialsModel","formData","setFormData","useState","itemName","quantity","supplier","date","handleChange","e","value","target","onSubmit","preventDefault","console","log","onChange","required","Materials","stock","setStock","planModalOpen","setPlanModalOpen","addModalOpen","setAddModalOpen","togglePlanModal","toggleAddModal","Card","CardHeader","CardTitle","Archive","style","float","CardBody","Table","bordered","map","item","index"],"mappings":"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","file":"static/js/12.4e28edeb.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import React from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button,  FormGroup, Label, Input } from 'reactstrap'\r\n\r\nconst PlanModel = ({ isOpen, toggle }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={toggle}>\r\n      <ModalHeader toggle={toggle}>Create New Plan</ModalHeader>\r\n\r\n      <ModalBody>\r\n       \r\n        <FormGroup>\r\n          <Label for=\"itemName\">Item Name</Label>\r\n          <Input type=\"text\" name=\"itemName\" id=\"itemName\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"quantity\">Quantity</Label>\r\n          <Input type=\"number\" name=\"quantity\" id=\"quantity\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"emplyeeName\">Emplyee Name</Label>\r\n          <Input type=\"text\" name=\"emplyeeName\" id=\"emplyeeName\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"date\">Date</Label>\r\n          <Input type=\"date\" name=\"date\" id=\"date\" />\r\n        </FormGroup>\r\n        <h4>Desired Output</h4>\r\n         <FormGroup>\r\n          <Label for=\"articleNo\">Article No</Label>\r\n          <Input type=\"text\" name=\"articleNo\" id=\"articleNo\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"color\">Color</Label>\r\n          <Input type=\"text\" name=\"color\" id=\"color\" />\r\n        </FormGroup>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={toggle}>\r\n          Add Plan\r\n        </Button>\r\n        <Button color=\"secondary\" onClick={toggle}>\r\n          Cancel\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PlanModel\r\n","import React, { useState } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Label, Input } from 'reactstrap'\r\n\r\nconst AddMaterialsModel = ({ isOpen, toggle }) => {\r\n  const [formData, setFormData] = useState({\r\n    itemName: '',\r\n    quantity: '',\r\n    supplier: '',\r\n    date: ''\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // Handle the form submission logic here\r\n    console.log('New material added:', formData)\r\n    toggle()\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={toggle}>\r\n      <ModalHeader toggle={toggle}>Add New Material</ModalHeader>\r\n      <Form onSubmit={handleSubmit}>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"itemName\">Item Name</Label>\r\n            <Input type=\"text\" name=\"itemName\" id=\"itemName\" value={formData.itemName} onChange={handleChange} required />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"quantity\">Quantity</Label>\r\n            <Input type=\"text\" name=\"quantity\" id=\"quantity\" value={formData.quantity} onChange={handleChange} required />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"supplier\">Supplier</Label>\r\n            <Input type=\"text\" name=\"supplier\" id=\"supplier\" value={formData.supplier} onChange={handleChange} required />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"date\">Date</Label>\r\n            <Input type=\"date\" name=\"date\" id=\"date\" value={formData.date} onChange={handleChange} required />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button type=\"submit\" color=\"primary\">Add Material</Button>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddMaterialsModel\r\n","import React, { useState } from 'react'\r\nimport { Card, CardBody, CardHeader, CardTitle, Table, Button } from 'reactstrap'\r\nimport { Archive } from 'react-feather'\r\nimport PlanModel from './planModel'\r\nimport AddMaterialsModel from './AddMaterialsModel'\r\n\r\nconst Materials = () => {\r\n  const initialStock = [\r\n    { itemName: 'Insole', quantity: 100, supplier: 'Supplier 1', date: '2024-07-01' },\r\n    { itemName: 'Heel', quantity: 200, supplier: 'Supplier 2', date: '2024-07-02' },\r\n    { itemName: 'Vamp', quantity: 50, supplier: 'Supplier 3', date: '2024-07-03' },\r\n    { itemName: 'Sole', quantity: 75, supplier: 'Supplier 4', date: '2024-07-04' },\r\n    { itemName: 'Counter', quantity: 30, supplier: 'Supplier 5', date: '2024-07-05' },\r\n    { itemName: 'Glue', quantity: '60L', supplier: 'Supplier 6', date: '2024-07-05' }\r\n  ]\r\n\r\n  const [stock, setStock] = useState(initialStock)\r\n  const [planModalOpen, setPlanModalOpen] = useState(false)\r\n  const [addModalOpen, setAddModalOpen] = useState(false)\r\n\r\n  const togglePlanModal = () => setPlanModalOpen(!planModalOpen)\r\n  const toggleAddModal = () => setAddModalOpen(!addModalOpen)\r\n\r\n  return (\r\n    <div className=\"stock-container\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">\r\n            <Archive /> Materials Stock\r\n          </CardTitle>\r\n          <Button color=\"primary\" onClick={togglePlanModal} style={{ float: 'right' }}>\r\n            Create New Plan\r\n          </Button>\r\n          <Button color=\"success\" onClick={togglePlanModal} style={{ float: 'right' }}>\r\n            Add New Material\r\n          </Button>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Table bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>Item Name</th>\r\n                <th>Quantity</th>\r\n                <th>Supplier</th>\r\n                <th>Date</th>\r\n                <th>Add Material</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {stock.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.itemName}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.date}</td>\r\n                  <td>\r\n                    <Button color=\"success\" onClick={toggleAddModal}>\r\n                      Add Material\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <PlanModel isOpen={planModalOpen} toggle={togglePlanModal} />\r\n      <AddMaterialsModel isOpen={addModalOpen} toggle={toggleAddModal} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Materials\r\n"],"sourceRoot":""}