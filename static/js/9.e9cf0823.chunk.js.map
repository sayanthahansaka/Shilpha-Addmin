{"version":3,"sources":["utility/Utils.js","utility/context/Can.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/components/avatar/index.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","redux/actions/auth/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","utility/hooks/useSkin.js"],"names":["isUserLoggedIn","localStorage","getItem","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","AbilityContext","createContext","createContextualCan","Consumer","handleContentWidth","value","dispatch","type","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","props","layout","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Tag","Fragment","useEffect","menuCollapsed","menuHidden","_jsxs","className","classnames","query","length","_jsx","concat","Routes","path","component","lazy","meta","authRoute","BlankLayout","_ref","rest","skin","setSkin","useSkin","isMounted","setIsMounted","useState","Customizer","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","e","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","Settings","size","PerfectScrollbar","X","FormGroup","renderSkinsRadio","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","Select","classNamePrefix","defaultValue","options","isClearable","color","selected","border","renderNavbarTypeRadio","navbarTypeArr","renderFooterTypeRadio","footerTypeArr","Footer","Avatar","forwardRef","ref","imgClassName","initials","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","tag","contentStyles","undefined","style","str","results","split","forEach","push","join","getInitials","Badge","pill","src","alt","height","width","defaultProps","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","JwtService","constructor","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","request","use","config","accessToken","getToken","headers","Authorization","error","Promise","reject","response","originalRequest","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","getRefreshToken","setItem","login","_len","arguments","args","Array","_key","post","register","_len2","_key2","jwt","UserDropdown","userData","setUserData","JSON","parse","userAvatar","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","role","DropdownMenu","right","DropdownItem","Link","to","User","Mail","CheckSquare","MessageSquare","removeItem","Power","NavbarUser","setMenuVisibility","ThemeToggler","Sun","Moon","NavItem","NavLink","Menu","ThemeNavbar","title","Airplay","navLink","ShoppingBag","Home","Archive","Box","BarChart2","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","Circle","Disc","themeConfig","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","current","key","VerticalNavMenuLink","item","groupActive","setGroupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","searchParents","parents","disabled","active","target","newTab","isActive","url","resetActiveGroup","badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","val","onCollapseClick","toggleOpenGroup","pop","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","MoreHorizontal","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","wheelPropagation","onScrollY","container","scrollTop","classList","contains","add","remove","scrollMenu","useRTL","isRTL","element","document","getElementsByTagName","setAttribute","valueToStore","Function","handleRTL","console","log","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","windowWidth","setWindowWidth","window","innerWidth","layoutStore","handleWindowWidth","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","SidebarComponent","Navbar","expand","light","dark","NavbarComponent","show","customizer","FooterComponent","ScrollToTop","showUnder","bottom","Button","ArrowUp","Layout","HorizontalNavMenuLink","setOpenDropdown","isChild","resetOpenDropdowns","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","maxHeight","stylesObj","popper","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","navbarClasses","MenuComponent","Router","useLayout","lastLayout","setLastLayout","handleLayout","useRouterTransition","routerTransition","DefaultLayout","useContext","Layouts","NotAuthorized","Error","AppRouter","basename","process","Switch","Route","render","Redirect","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","route","LayoutRoutesAndPaths","assign","Suspense","fallback","App","body","classNames","bordered","stringify"],"mappings":"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","file":"static/js/9.e9cf0823.chunk.js","sourcesContent":["// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** Imports createContext function\r\nimport { createContext } from 'react'\r\n\r\n// ** Imports createContextualCan function\r\nimport { createContextualCan } from '@casl/react'\r\n\r\n// ** Create Context\r\nexport const AbilityContext = createContext()\r\n\r\n// ** Init Can Context\r\nexport const Can = createContextualCan(AbilityContext.Consumer)\r\n","// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n  const navbarStore = store.navbar\r\n  const contentWidth = store.layout.contentWidth\r\n\r\n  //** Vars\r\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [wrapperClass]: wrapperClass,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': !appLayout,\r\n          'content-area-wrapper': appLayout,\r\n          'container p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag\r\n          /*eslint-disable */\r\n          {...(layout === 'HorizontalLayout' && !appLayout\r\n            ? { className: classnames({ 'content-body': !appLayout }) }\r\n            : {})}\r\n          /*eslint-enable */\r\n        >\r\n          {children}\r\n        </Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutWrapper\r\n","import { lazy } from 'react'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Shilpha - Admin'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/home'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  {\r\n    path: '/home',\r\n    component: lazy(() => import('../../views/home/Home'))\r\n  },\r\n  {\r\n    path: '/plan',\r\n    component: lazy(() => import('../../views/plan/plan'))\r\n  },\r\n  {\r\n    path: '/online',\r\n    component: lazy(() => import('../../views/online/Online'))\r\n  },\r\n  {\r\n    path: '/shop',\r\n    component: lazy(() => import('../../views/shop/Shop'))\r\n  },\r\n  {\r\n    path: '/footwearstock',\r\n    component: lazy(() => import('../../views/stock/Stock'))\r\n  },\r\n  {\r\n    path: '/materials',\r\n    component: lazy(() => import('../../views/materials/Materials'))\r\n  },\r\n  {\r\n    path: '/revenue',\r\n    component: lazy(() => import('../../views/revenue/Revenue'))\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/error',\r\n    component: lazy(() => import('../../views/Error')),\r\n    layout: 'BlankLayout'\r\n  }\r\n]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\nconst BlankLayout = ({ children, ...rest }) => {\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='blank-page'>\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\r\n        {/* COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\r\n          Pixinvent\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span>\r\n      <span className='float-md-right d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} /> */}\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\n\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogout } from '@store/actions/auth'\r\n\r\n// ** Third Party Components\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\r\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nconst UserDropdown = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (isUserLoggedIn() !== null) {\r\n      setUserData(JSON.parse(localStorage.getItem('userData')))\r\n    }\r\n  }, [])\r\n\r\n  //** Vars\r\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\r\n        <div className='user-nav d-sm-flex d-none'>\r\n          <span className='user-name font-weight-bold'>{(userData && userData['username']) || 'John Doe'}</span>\r\n          <span className='user-status'>{(userData && userData.role) || 'Admin'}</span>\r\n        </div>\r\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <User size={14} className='mr-75' />\r\n          <span className='align-middle'>Profile</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <Mail size={14} className='mr-75' />\r\n          <span className='align-middle'>Inbox</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <CheckSquare size={14} className='mr-75' />\r\n          <span className='align-middle'>Tasks</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <MessageSquare size={14} className='mr-75' />\r\n          <span className='align-middle'>Chats</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\r\n          <Power size={14} className='mr-75' />\r\n          <span className='align-middle'>Logout</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default UserDropdown\r\n","// ** Dropdowns Imports\r\nimport { Fragment } from 'react'\r\n\r\nimport UserDropdown from './UserDropdown'\r\n\r\n// ** Third Party Components\r\nimport { Sun, Moon, Menu } from 'react-feather'\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavbarUser = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props\r\n\r\n  // ** Function to toggle Theme (Light/Dark)\r\n  const ThemeToggler = () => {\r\n    if (skin === 'dark') {\r\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n    } else {\r\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\r\n        <NavItem className='mobile-menu mr-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      <div className='bookmark-wrapper d-flex align-items-center'>\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink className='nav-link-style'>\r\n            <ThemeToggler />\r\n          </NavLink>\r\n        </NavItem>\r\n      </div>\r\n      <ul className='nav navbar-nav align-items-center ml-auto'>\r\n        <UserDropdown />\r\n      </ul>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\n\r\nconst ThemeNavbar = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","import { Mail, Home, Box, BarChart2, ShoppingCart, ShoppingBag, Archive, Airplay } from 'react-feather'\r\n\r\nexport default [\r\n  // {\r\n  //   id: 'home',\r\n  //   title: 'Home',\r\n  //   icon: <Home size={20} />,\r\n  //   navLink: '/home'\r\n  // },\r\n  {\r\n    id: 'plan',\r\n    title: 'Plan',\r\n    icon: <Airplay size={20} />,\r\n    navLink: '/plan'\r\n  },\r\n  {\r\n    id: 'online',\r\n    title: 'Online',\r\n    icon: <ShoppingBag size={20} />,\r\n    navLink: '/online'\r\n  },\r\n  {\r\n    id: 'shop',\r\n    title: 'Shop',\r\n    icon: <Home size={20} />,\r\n    navLink: '/shop'\r\n  },\r\n  {\r\n    id: 'materials stock',\r\n    title: 'Materials Stock',\r\n    icon: <Archive size={20} />,\r\n    navLink: '/materials'\r\n  },\r\n  {\r\n    id: 'Footwear stock',\r\n    title: 'Footwear Stock',\r\n    icon: <Box size={20} />,\r\n    navLink: '/footwearstock'\r\n  },\r\n  {\r\n    id: 'revenue',\r\n    title: 'Revenue',\r\n    icon: <BarChart2 size={20} />,\r\n    navLink: '/revenue'\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item mr-auto'>\r\n          <NavLink to='/' className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\n// export const isNavLinkActive = (link, currentURL, match) => {\r\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\r\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\r\n//   return (\r\n//     currentURL === link ||\r\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\r\n//   )\r\n// }\r\n\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if nav group is\r\n * @param {Array} children Group children\r\n */\r\n// export const isNavGroupActive = (children, currentURL, match) => {\r\n//   return children.some(child => {\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children) {\r\n//       return isNavGroupActive(child.children, currentURL, match)\r\n//     }\r\n//     // else it's link => Check for matched Route\r\n//     return isNavLinkActive(child.navLink, currentURL, match)\r\n//   })\r\n// }\r\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\r\n  return children.some(child => {\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children) {\r\n      return isNavGroupActive(child.children, currentURL, routerProps)\r\n    }\r\n    // else it's link => Check for matched Route\r\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\r\n  })\r\n}\r\n\r\n/**\r\n * Search for parent object\r\n * @param {Array} navigation Group children\r\n * @param {string} currentURL current URL\r\n */\r\n// export const search = (navigation, currentURL, match) => {\r\n//   let result\r\n//   navigation.some(child => {\r\n//     let children\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children && (children = search(child.children, currentURL, match))) {\r\n//       return (result = {\r\n//         id: child.id,\r\n//         children\r\n//       })\r\n//     }\r\n\r\n//     // else it's link => Check for matched Route\r\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\r\n//       return (result = {\r\n//         id: child.id\r\n//       })\r\n//     }\r\n//   })\r\n//   return result\r\n// }\r\n\r\nexport const search = (navigation, currentURL, routerProps) => {\r\n  let result\r\n  navigation.some(child => {\r\n    let children\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\r\n      return (result = {\r\n        id: child.id,\r\n        children\r\n      })\r\n    }\r\n\r\n    // else it's link => Check for matched Route\r\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\r\n      return (result = {\r\n        id: child.id\r\n      })\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * Loop through nested object\r\n * @param {object} obj nested object\r\n */\r\nexport const getAllParents = (obj, match) => {\r\n  const res = []\r\n  const recurse = (obj, current) => {\r\n    for (const key in obj) {\r\n      const value = obj[key]\r\n      if (value !== undefined) {\r\n        if (value && typeof value === 'object') {\r\n          recurse(value, key)\r\n        } else {\r\n          if (key === match) {\r\n            res.push(value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  recurse(obj)\r\n  return res\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\n// ** Vertical Menu Array Of Items\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  toggleActiveGroup,\r\n  parentItem,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  // ** To match path\r\n  const match = matchPath(currentURL, {\r\n    path: `${item.navLink}/:param`,\r\n    exact: true,\r\n    strict: false\r\n  })\r\n\r\n  // ** Search for current item parents\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    return allParents\r\n  }\r\n\r\n  // ** URL Vars\r\n  const resetActiveGroup = navLink => {\r\n    const parents = search(navigation, navLink, match)\r\n    toggleActiveGroup(item.id, parents)\r\n  }\r\n\r\n  // ** Reset Active & Open Group Arrays\r\n  const resetActiveAndOpenGroups = () => {\r\n    setGroupActive([])\r\n    setGroupOpen([])\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n        onClick={e => {\r\n          if (!item.navLink.length) {\r\n            e.preventDefault()\r\n          }\r\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{item.title}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Collapse, Badge } from 'reactstrap'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  parentItem,\r\n  menuCollapsed,\r\n  menuHover,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggles Open Group\r\n  const toggleOpenGroup = (item, parentItem) => {\r\n    let openArr = groupOpen\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      allParents.pop()\r\n    }\r\n\r\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\r\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\r\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\r\n    } else {\r\n      openArr = []\r\n      if (!groupOpen.includes(item)) {\r\n        openArr.push(item)\r\n      }\r\n    }\r\n\r\n    // ** Set Open Group\r\n    setGroupOpen([...openArr])\r\n  }\r\n\r\n  // ** Toggle Active Group\r\n  const toggleActiveGroup = (item, parentItem) => {\r\n    let activeArr = groupActive\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      activeArr = allParents\r\n    } else {\r\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\r\n    }\r\n\r\n    // ** Set open group removing any activegroup item present in opengroup state\r\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\r\n    setGroupOpen([...openArr])\r\n\r\n    // **  Set Active Group\r\n    setGroupActive([...activeArr])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\r\n      toggleActiveGroup(item.id)\r\n    } else {\r\n      toggleOpenGroup(item.id, parentItem)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>{item.title}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            toggleActiveGroup={toggleActiveGroup}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>{item.header}</span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Utils\r\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuSectionHeader,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n\r\n    return <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Vertical Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    if (menuCollapsed) {\r\n      setMenuHover(true)\r\n    }\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={navigation}\r\n                  groupActive={groupActive}\r\n                  setGroupActive={setGroupActive}\r\n                  activeItem={activeItem}\r\n                  setActiveItem={setActiveItem}\r\n                  groupOpen={groupOpen}\r\n                  setGroupOpen={setGroupOpen}\r\n                  routerProps={routerProps}\r\n                  menuCollapsed={menuCollapsed}\r\n                  menuHover={menuHover}\r\n                  currentActiveItem={currentActiveItem}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          routerProps={routerProps}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          menuCollapsed={menuCollapsed}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\nconst VerticalLayout = props => <Layout {...props}>{props.children}</Layout>\r\n\r\nexport default VerticalLayout\r\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Horizontal menu items array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuLink = ({\r\n  item,\r\n  setOpenDropdown,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  routerProps,\r\n  currentActiveItem,\r\n  isChild\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\r\n\r\n  // ** Get parents of current items\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    allParents.pop()\r\n    return allParents\r\n  }\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>{item.title}</span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive } from '@layouts/utils'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const {\r\n    item,\r\n    submenu,\r\n    groupActive,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    openDropdown,\r\n    setGroupActive,\r\n    activeItem,\r\n    setActiveItem,\r\n    routerProps,\r\n    setOpenDropdown,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** URL Var\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Dropdown menu modifiers\r\n  const menuModifiers = {\r\n    setMaxHeight: {\r\n      enabled: true,\r\n      fn: data => {\r\n        const pageHeight = window.innerHeight,\r\n          ddTop = data.instance.reference.getBoundingClientRect().top,\r\n          ddHeight = data.popper.height\r\n        let maxHeight, stylesObj\r\n\r\n        // ** Calculate and set height\r\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n          maxHeight = pageHeight - ddTop - 25\r\n          stylesObj = {\r\n            maxHeight,\r\n            overflowY: 'auto'\r\n          }\r\n        }\r\n\r\n        const ddRef = data.instance.popper.getBoundingClientRect()\r\n\r\n        // ** If there is not space left to open sub menu open it to the right\r\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\r\n        }\r\n\r\n        return {\r\n          ...data,\r\n          styles: {\r\n            ...stylesObj\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Dropdown\r\n      tag='li'\r\n      className={classnames({\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active':\r\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\r\n      })}\r\n      isOpen={openDropdown.includes(item.id)}\r\n      toggle={() => onMouseEnter(item.id)}\r\n      onMouseEnter={() => onMouseEnter(item.id)}\r\n      onMouseLeave={() => onMouseLeave(item.id)}\r\n    >\r\n      <DropdownToggle\r\n        to='/'\r\n        tag={Link}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n        onClick={e => e.preventDefault()}\r\n      >\r\n        {item.icon}\r\n        <span>{item.title}</span>\r\n      </DropdownToggle>\r\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\r\n        <HorizontalNavMenuItems\r\n          submenu={true}\r\n          parentItem={item}\r\n          items={item.children}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          openDropdown={openDropdown}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          isChild={true}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","// ** Menu Components Imports\r\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\r\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\r\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    HorizontalNavMenuGroup,\r\n    HorizontalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n\r\n    return <TagName item={item} index={index} key={item.id} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default HorizontalNavMenuItems\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Horizontal Menu Array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Horizontal Menu Components\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\r\n  // ** States\r\n  const [activeItem, setActiveItem] = useState(null)\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [openDropdown, setOpenDropdown] = useState([])\r\n\r\n  // ** On mouse enter push the ID to openDropdown array\r\n  const onMouseEnter = id => {\r\n    const arr = openDropdown\r\n    arr.push(id)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  // ** On mouse leave remove the ID to openDropdown array\r\n  const onMouseLeave = id => {\r\n    const arr = openDropdown\r\n    arr.splice(arr.indexOf(id), 1)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-container main-menu-content'>\r\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\r\n        <HorizontalNavMenuItems\r\n          submenu={false}\r\n          items={navigation}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          openDropdown={openDropdown}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalMenu\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport NavbarComponent from './components/navbar'\r\nimport FooterComponent from './components/footer'\r\nimport MenuComponent from './components/menu/horizontal-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\r\n\r\nconst HorizontalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Vars\r\n  const contentWidth = layoutStore.contentWidth\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  // ** UseEffect Cleanup\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        } menu-expanded`\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar\r\n        expand='lg'\r\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\r\n          'navbar-scrolled': navbarScrolled\r\n        })}\r\n      >\r\n        {!navbar && (\r\n          <div className='navbar-header d-xl-block d-none'>\r\n            <ul className='nav navbar-nav'>\r\n              <NavItem>\r\n                <Link to='/' className='navbar-brand'>\r\n                  <span className='brand-logo'>\r\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n                  </span>\r\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n                </Link>\r\n              </NavItem>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {!isHidden ? (\r\n        <div className='horizontal-menu-wrapper'>\r\n          <Navbar\r\n            tag='div'\r\n            expand='sm'\r\n            light={skin !== 'dark'}\r\n            dark={skin === 'dark' || bgColorCondition}\r\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\r\n              [navbarClasses[navbarType]]: navbarType !== 'static',\r\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\r\n            })}\r\n          >\r\n            {menu ? menu : <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />}\r\n          </Navbar>\r\n        </div>\r\n      ) : null}\r\n\r\n      {children}\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HorizontalLayout\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/HorizontalLayout'\r\n\r\nconst HorizontalLayout = props => <Layout {...props}>{props.children}</Layout>\r\n\r\nexport default HorizontalLayout\r\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                  appLayout: route.appLayout\r\n                                }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                  routeMeta: route.meta\r\n                                }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                  wrapperClass: route.className\r\n                                }\r\n                              : {})}\r\n                            /*eslint-enable */\r\n                          >\r\n                            <route.component {...props} />\r\n                            {/* <FinalRoute route={route} {...props} /> */}\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        {/* <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        /> */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return <Redirect to={DefaultRoute} />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />/\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n"],"sourceRoot":""}