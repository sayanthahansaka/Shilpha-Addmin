{"version":3,"sources":["views/revenue/Revenue.js"],"names":["generateRandomRevenue","length","Array","from","name","concat","Math","floor","random","revenue","RevenueChart","_ref","title","data","_jsxs","children","_jsx","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","activeDot","r","Revenue","dailyRevenue","setDailyRevenue","useState","monthlyRevenue","setMonthlyRevenue","yearlyRevenue","setYearlyRevenue","useEffect","Card","_ref2","style","border","borderRadius","padding","boxShadow","maxWidth","margin","textAlign","fontSize","color","listStyleType","map","item","index","marginBottom","label","value","display","justifyContent","gap"],"mappings":"mJAAA,iGAIA,MAAMA,EAAwBC,GACrBC,MAAMC,KAAK,CAAEF,WAAU,MAC5BG,KAAK,OAADC,OAASC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAC9CC,QAASH,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,QAI3CE,EAAeC,IAAsB,IAArB,MAAEC,EAAK,KAAEC,GAAMF,EACnC,OACEG,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAKH,IACLI,cAACC,IAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIJ,SAC5CD,eAACM,IAAS,CAACP,KAAMA,EAAKE,SAAA,CACpBC,cAACK,IAAa,CAACC,gBAAgB,QAC/BN,cAACO,IAAK,CAACC,QAAQ,SACfR,cAACS,IAAK,IACNT,cAACU,IAAO,IACRV,cAACW,IAAM,IACPX,cAACY,IAAI,CAACC,KAAK,WAAWL,QAAQ,UAAUM,OAAO,UAAUC,UAAW,CAAEC,EAAG,YAGzE,EAuEKC,UAnECA,KACd,MAAOC,EAAcC,GAAmBC,mBAASpC,EAAsB,MAChEqC,EAAgBC,GAAqBF,mBAASpC,EAAsB,MACpEuC,EAAeC,GAAoBJ,mBAASpC,EAAsB,IAEzEyC,qBAAU,KACRN,EAAgBnC,EAAsB,KACtCsC,EAAkBtC,EAAsB,KACxCwC,EAAiBxC,EAAsB,GAAG,GACzC,IAEH,MAAM0C,EAAOC,IAAA,IAAC,MAAE/B,EAAK,KAAEC,GAAM8B,EAAA,OAC3B7B,eAAA,OAAK8B,MAAO,CACVC,OAAQ,iBACRC,aAAc,MACdC,QAAS,OACTC,UAAW,+BACXC,SAAU,QACVC,OAAQ,YACRC,UAAW,UACXpC,SAAA,CACAC,cAAA,MAAI4B,MAAO,CAAEQ,SAAU,SAAUC,MAAO,QAAStC,SAAEH,IACnDI,cAAA,MAAI4B,MAAO,CAAEU,cAAe,OAAQP,QAAS,GAAIhC,SAC9CF,EAAK0C,KAAI,CAACC,EAAMC,IACf3C,eAAA,MAAgB8B,MAAO,CAAEc,aAAc,QAAS3C,SAAA,CAC9CD,eAAA,UAAAC,SAAA,CAASyC,EAAKG,MAAM,OAAU,IAAEH,EAAKI,QAD9BH,SAKT,EAqBR,OACE3C,eAAA,OAAAC,SAAA,CAEAD,eAAA,OAAK8B,MAAO,CAAEiB,QAAS,OAAQC,eAAgB,SAAUC,IAAK,QAAShD,SAAA,CACrEC,cAAC0B,EAAI,CAAC9B,MAAM,gBAAgBC,KAvBX,CACnB,CAAE8C,MAAO,OAAQC,MAAO,WACxB,CAAED,MAAO,SAAUC,MAAO,WAC1B,CAAED,MAAO,SAAUC,MAAO,aAqBxB5C,cAAC0B,EAAI,CAAC9B,MAAM,iBAAiBC,KAlBX,CACpB,CAAE8C,MAAO,YAAaC,MAAO,WAC7B,CAAED,MAAO,SAAUC,MAAO,WAC1B,CAAED,MAAO,aAAcC,MAAO,cAgB5B5C,cAAC0B,EAAI,CAAC9B,MAAM,gBAAgBC,KAbX,CACnB,CAAE8C,MAAO,YAAaC,MAAO,YAC7B,CAAED,MAAO,SAAUC,MAAO,YAC1B,CAAED,MAAO,aAAcC,MAAO,kBAa5B5C,cAAA,MAAAD,SAAI,2BACJC,cAACN,EAAY,CAACE,MAAM,gBAAgBC,KAAMqB,IAC1ClB,cAACN,EAAY,CAACE,MAAM,kBAAkBC,KAAMwB,IAC5CrB,cAACN,EAAY,CAACE,MAAM,iBAAiBC,KAAM0B,MACvC,C","file":"static/js/15.4e3dd812.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Card, CardBody, CardHeader, CardTitle, Table, Button, Input } from 'reactstrap'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\r\n\r\nconst generateRandomRevenue = length => {\r\n  return Array.from({ length }, () => ({\r\n    name: `Day ${Math.floor(Math.random() * 30) + 1}`,\r\n    revenue: Math.floor(Math.random() * 10000) + 1000\r\n  }))\r\n}\r\n\r\nconst RevenueChart = ({ title, data }) => {\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Revenue = () => {\r\n  const [dailyRevenue, setDailyRevenue] = useState(generateRandomRevenue(30))\r\n  const [monthlyRevenue, setMonthlyRevenue] = useState(generateRandomRevenue(12))\r\n  const [yearlyRevenue, setYearlyRevenue] = useState(generateRandomRevenue(1))\r\n\r\n  useEffect(() => {\r\n    setDailyRevenue(generateRandomRevenue(30))\r\n    setMonthlyRevenue(generateRandomRevenue(12))\r\n    setYearlyRevenue(generateRandomRevenue(1))\r\n  }, [])\r\n\r\n  const Card = ({ title, data }) => (\r\n    <div style={{\r\n      border: '1px solid #ccc',\r\n      borderRadius: '8px',\r\n      padding: '20px',\r\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n      maxWidth: '300px',\r\n      margin: '20px auto',\r\n      textAlign: 'center'\r\n    }}>\r\n      <h3 style={{ fontSize: '1.5rem', color: '#333' }}>{title}</h3>\r\n      <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n        {data.map((item, index) => (\r\n          <li key={index} style={{ marginBottom: '10px' }}>\r\n            <strong>{item.label}:</strong> {item.value}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n  const todayRevenue = [\r\n    { label: 'Cost', value: '$10,000' },\r\n    { label: 'Income', value: '$15,000' },\r\n    { label: 'Profit', value: '$5,000' }\r\n  ]\r\n\r\n  const monthlyProfit = [\r\n    { label: 'Estimated', value: '$20,000' },\r\n    { label: 'Actual', value: '$18,000' },\r\n    { label: 'Difference', value: '-$2,000' }\r\n  ]\r\n\r\n  const yearlyProfit = [\r\n    { label: 'Estimated', value: '$250,000' },\r\n    { label: 'Actual', value: '$240,000' },\r\n    { label: 'Difference', value: '-$10,000' }\r\n  ]\r\n\r\n\r\n  return (\r\n    <div>\r\n    \r\n    <div style={{ display: 'flex', justifyContent: 'center', gap: '20px' }}>\r\n      <Card title=\"Today Revenue\" data={todayRevenue} />\r\n      <Card title=\"Monthly Profit\" data={monthlyProfit} />\r\n      <Card title=\"Yearly Profit\" data={yearlyProfit} />\r\n    </div>\r\n\r\n      <h2>Company Revenue Charts</h2>\r\n      <RevenueChart title=\"Daily Revenue\" data={dailyRevenue} />\r\n      <RevenueChart title=\"Monthly Revenue\" data={monthlyRevenue} />\r\n      <RevenueChart title=\"Yearly Revenue\" data={yearlyRevenue} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Revenue\r\n"],"sourceRoot":""}