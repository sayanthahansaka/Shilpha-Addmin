{"version":3,"sources":["../node_modules/react-feather/dist/icons/shopping-cart.js","views/stock/StockModal.js","views/stock/Stock.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ShoppingCart","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","propTypes","PropTypes","string","oneOfType","number","displayName","AddStockModal","isOpen","toggle","addStock","stockType","formData","setFormData","useState","itemName","quantity","price","supplier","date","handleChange","e","name","value","_jsxs","Modal","children","ModalHeader","ModalBody","FormGroup","_jsx","Label","for","Input","type","id","onChange","ModalFooter","Button","onClick","handleSubmit","Stock","mainStock","setMainStock","onlineOrderStock","setOnlineOrderStock","shopStock","setShopStock","modalOpen","setModalOpen","setStockType","toggleModal","className","newStockItem","Card","CardHeader","CardTitle","tag","style","float","CardBody","Table","bordered","map","item","index"],"mappings":"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","file":"static/js/17.24b86037.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ShoppingCart = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"9\",\n    cy: \"21\",\n    r: \"1\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"20\",\n    cy: \"21\",\n    r: \"1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"\n  }));\n});\nShoppingCart.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nShoppingCart.displayName = 'ShoppingCart';\nexport default ShoppingCart;","import React, { useState } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap'\r\n\r\nconst AddStockModal = ({ isOpen, toggle, addStock, stockType }) => {\r\n  const [formData, setFormData] = useState({\r\n    itemName: '',\r\n    quantity: '',\r\n    price: '',\r\n    supplier: '',\r\n    date: ''\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData({ ...formData, [name]: value })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    addStock(stockType, formData)\r\n    toggle()\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={toggle}>\r\n      <ModalHeader toggle={toggle}>Add Stock Item to {stockType}</ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label for=\"itemName\">Item Name</Label>\r\n          <Input type=\"text\" name=\"itemName\" id=\"itemName\" value={formData.itemName} onChange={handleChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"quantity\">Quantity</Label>\r\n          <Input type=\"number\" name=\"quantity\" id=\"quantity\" value={formData.quantity} onChange={handleChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"price\">Price</Label>\r\n          <Input type=\"number\" name=\"price\" id=\"price\" value={formData.price} onChange={handleChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"supplier\">Supplier</Label>\r\n          <Input type=\"text\" name=\"supplier\" id=\"supplier\" value={formData.supplier} onChange={handleChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"date\">Date</Label>\r\n          <Input type=\"date\" name=\"date\" id=\"date\" value={formData.date} onChange={handleChange} />\r\n        </FormGroup>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={handleSubmit}>Add Stock</Button>\r\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddStockModal\r\n","import React, { useState } from 'react'\r\nimport { Card, CardBody, CardHeader, CardTitle, Table, Button } from 'reactstrap'\r\nimport { ShoppingCart } from 'react-feather'\r\nimport AddStockModal from './StockModal' // Update the path accordingly\r\n\r\nconst Stock = () => {\r\n  const initialMainStock = [\r\n    { itemName: 'Item A', quantity: 100, price: 10, supplier: 'Supplier 1', date: '2024-07-01' },\r\n    { itemName: 'Item B', quantity: 200, price: 20, supplier: 'Supplier 2', date: '2024-07-02' }\r\n  ]\r\n\r\n  const initialOnlineOrderStock = [{ itemName: 'Item C', quantity: 50, price: 15, supplier: 'Supplier 3', date: '2024-07-03' }]\r\n\r\n  const initialShopStock = [{ itemName: 'Item D', quantity: 75, price: 25, supplier: 'Supplier 4', date: '2024-07-04' }]\r\n\r\n  const [mainStock, setMainStock] = useState(initialMainStock)\r\n  const [onlineOrderStock, setOnlineOrderStock] = useState(initialOnlineOrderStock)\r\n  const [shopStock, setShopStock] = useState(initialShopStock)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [stockType, setStockType] = useState('')\r\n\r\n  const toggleModal = () => setModalOpen(!modalOpen)\r\n\r\n  const addStock = (type, newStockItem) => {\r\n    switch (type) {\r\n      case 'Main Stock':\r\n        setMainStock([...mainStock, newStockItem])\r\n        break\r\n      case 'Online Order Stock':\r\n        setOnlineOrderStock([...onlineOrderStock, newStockItem])\r\n        break\r\n      case 'Shop Stock':\r\n        setShopStock([...shopStock, newStockItem])\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"stock-container\">\r\n      <AddStockModal isOpen={modalOpen} toggle={toggleModal} addStock={addStock} stockType={stockType} />\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">\r\n            <ShoppingCart /> Main Stock\r\n            <Button color=\"primary\" onClick={() => { setStockType('Main Stock'); toggleModal() }} style={{ float: 'right' }}>\r\n              Add Stock\r\n            </Button>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Table bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>Item Name</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n                <th>Supplier</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mainStock.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.itemName}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.price}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.date}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">\r\n            <ShoppingCart /> Online Order Stock\r\n            <Button color=\"primary\" onClick={() => { setStockType('Online Order Stock'); toggleModal() }} style={{ float: 'right' }}>\r\n              Add Stock\r\n            </Button>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Table bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>Item Name</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n                <th>Supplier</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {onlineOrderStock.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.itemName}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.price}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.date}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">\r\n            <ShoppingCart /> Shop Stock\r\n            <Button color=\"primary\" onClick={() => { setStockType('Shop Stock'); toggleModal() }} style={{ float: 'right' }}>\r\n              Add Stock\r\n            </Button>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Table bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>Item Name</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n                <th>Supplier</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {shopStock.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.itemName}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.price}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.date}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stock\r\n"],"sourceRoot":""}